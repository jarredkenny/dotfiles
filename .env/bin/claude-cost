#!/bin/bash

CACHE_DIR="$HOME/.cache/claude-metrics"
CACHE_FILE="$CACHE_DIR/cost-cache"
CACHE_AGE=60  # Cache for 60 seconds

# Create cache directory if it doesn't exist
mkdir -p "$CACHE_DIR"

# Check if cache exists and is fresh
if [ -f "$CACHE_FILE" ]; then
    cache_time=$(stat -f %m "$CACHE_FILE" 2>/dev/null || stat -c %Y "$CACHE_FILE" 2>/dev/null)
    current_time=$(date +%s)
    age=$((current_time - cache_time))
    
    if [ $age -lt $CACHE_AGE ]; then
        # Cache is fresh, return cached value
        cat "$CACHE_FILE"
        exit 0
    fi
fi

# Cache is stale or doesn't exist, fetch new data
# First try to get the data
raw_output=$(ccusage --since $(date +%Y%m%d) --json 2>/dev/null)

# Check if we got valid JSON
if [ -n "$raw_output" ] && echo "$raw_output" | jq -e . >/dev/null 2>&1; then
    result=$(echo "$raw_output" | jq -r '
      if .daily then
        .daily[]
        | select(.date == (now | strftime("%Y-%m-%d")))
        | "\(.totalCost | tostring | split(".") | .[0] + "." + (.[1] // "00")[0:2])"
      else
        empty
      end
    ')
else
    result=""
fi

# If no result, show 0.00
if [ -z "$result" ]; then
    result="0.00"
fi

# Save to cache and output
echo "$result" | tee "$CACHE_FILE"
