#!/bin/bash

CACHE_DIR="$HOME/.cache/claude-metrics"
CACHE_FILE="$CACHE_DIR/session-cache"
CACHE_AGE=60  # Cache for 60 seconds

# Create cache directory if it doesn't exist
mkdir -p "$CACHE_DIR"

# Check if cache exists and is fresh
if [ -f "$CACHE_FILE" ]; then
    cache_time=$(stat -f %m "$CACHE_FILE" 2>/dev/null || stat -c %Y "$CACHE_FILE" 2>/dev/null)
    current_time=$(date +%s)
    age=$((current_time - cache_time))
    
    if [ $age -lt $CACHE_AGE ]; then
        # Cache is fresh, return cached value
        cat "$CACHE_FILE"
        exit 0
    fi
fi

# Cache is stale or doesn't exist, fetch new data
result=$(ccusage blocks --live --json \
  | jq -r '
      .blocks[]
      | select(.isActive)
      | (.startTime | sub("\\..*Z$";"Z") | strptime("%Y-%m-%dT%H:%M:%SZ") | mktime) as $s
      | (.endTime   | sub("\\..*Z$";"Z") | strptime("%Y-%m-%dT%H:%M:%SZ") | mktime) as $e
      | (($s - 10800) | strftime("%H:%M")) as $localStart
      | ((((now - $s) / ($e - $s) * 100 * 10) | floor) / 10) as $pct
      | "\($localStart) \($pct)%"
    ')

# If no result, show default value
if [ -z "$result" ]; then
    result="-"
fi

# Save to cache and output
echo "$result" | tee "$CACHE_FILE"
